        -:    0:Source:D:/Facultate/OOP/CoffeShop-Materials1/ui.c
        -:    0:Graph:D:\Facultate\OOP\CoffeShop-Materials1\cmake-build-debug-coverage\CMakeFiles\Lab2_4.dir\ui.c.gcno
        -:    0:Data:D:\Facultate\OOP\CoffeShop-Materials1\cmake-build-debug-coverage\CMakeFiles\Lab2_4.dir\ui.c.gcda
        -:    0:Runs:1
        -:    1:#include "ui.h"
        -:    2:#include "service.h"
        -:    3:#include "stdio.h"
        -:    4:
function printMenu called 1 returned 100% blocks executed 100%
        1:    5:void printMenu() {
        1:    6:    printf("1.Add Material\n2.Update Material\n3.Delete\n4.Get Material\n5.Print All\n6.Get Material quantity\n7.Filter By Starting Letter\n8.Filter By Less Quantity\n9.Sort By Name\n10.Sort By Quantity\n0.Exit\n");
        1:    6-block  0
call    0 returned 1
        1:    7:}
        -:    8:
function addMaterialUI called 0 returned 0% blocks executed 0%
    #####:    9:void addMaterialUI(CoffeeShop* coffeeShop) {
        -:   10:    char name[30], producer[30];
    #####:   11:    name[0] = '\0';
    #####:   12:    producer[0] = '\0';
    #####:   13:    int quantity = 1;
    #####:   14:    printf("Name : ");
    %%%%%:   14-block  0
call    0 never executed
    #####:   15:    scanf("%s", name);
call    0 never executed
    #####:   16:    printf("Producer : ");
call    0 never executed
    #####:   17:    scanf("%s", producer);
call    0 never executed
    #####:   18:    printf("Quantity : ");
call    0 never executed
    #####:   19:    scanf_s("%d", &quantity);
call    0 never executed
        -:   20:
    #####:   21:    int res = addMaterial(coffeeShop, name, producer, quantity);
call    0 never executed
    #####:   22:    if (res != 0)
branch  0 never executed
branch  1 never executed
    #####:   23:        printf("There was an error\n");
    %%%%%:   23-block  0
call    0 never executed
        -:   24:    else
    #####:   25:        printf("Element added successfully\n");
    %%%%%:   25-block  0
call    0 never executed
        -:   26:
    #####:   27:}
        -:   28:
function updateMaterialUI called 0 returned 0% blocks executed 0%
    #####:   29:void updateMaterialUI(CoffeeShop* coffeeShop) {
        -:   30:    char newName[30], newProducer[30];
    #####:   31:    newName[0] = '\0';
    #####:   32:    newProducer[0] = '\0';
    #####:   33:    int newQuantity = 0, pos = 0;
    #####:   34:    printListUI(coffeeShop->materialList);
    %%%%%:   34-block  0
call    0 never executed
    #####:   35:    printf("Position : ");
call    0 never executed
    #####:   36:    scanf_s("%d", &pos);
call    0 never executed
    #####:   37:    printf("New Name : ");
call    0 never executed
    #####:   38:    scanf("%s", newName);
call    0 never executed
    #####:   39:    printf("New Producer : ");
call    0 never executed
    #####:   40:    scanf("%s", newProducer);
call    0 never executed
    #####:   41:    printf("New Quantity : ");
call    0 never executed
    #####:   42:    scanf_s("%d", &newQuantity);
call    0 never executed
        -:   43:
    #####:   44:    int res = updateMaterial(coffeeShop, pos, newName, newProducer, newQuantity);
call    0 never executed
    #####:   45:    if (res != 0)
branch  0 never executed
branch  1 never executed
    #####:   46:        printf("There was an error %d\n", res);
    %%%%%:   46-block  0
call    0 never executed
        -:   47:    else
    #####:   48:        printf("Element added successfully\n");
    %%%%%:   48-block  0
call    0 never executed
        -:   49:
    #####:   50:}
        -:   51:
function removeMaterialUI called 0 returned 0% blocks executed 0%
    #####:   52:void removeMaterialUI(CoffeeShop* coffeeShop) {
    #####:   53:    int pos = 0;
    #####:   54:    printListUI(coffeeShop->materialList);
    %%%%%:   54-block  0
call    0 never executed
    #####:   55:    printf("Position : ");
call    0 never executed
    #####:   56:    scanf_s("%d", &pos);
call    0 never executed
    #####:   57:    int res = deleteMaterial(coffeeShop, pos);
call    0 never executed
    #####:   58:    if (res != 0)
branch  0 never executed
branch  1 never executed
    #####:   59:        printf("There was an error\n");
    %%%%%:   59-block  0
call    0 never executed
        -:   60:    else
    #####:   61:        printf("Element added successfully\n");
    %%%%%:   61-block  0
call    0 never executed
        -:   62:
    #####:   63:}
        -:   64:
function getMaterialUI called 0 returned 0% blocks executed 0%
    #####:   65:void getMaterialUI(CoffeeShop* coffeeShop) {
        -:   66:    char name[30], producer[30];
    #####:   67:    name[0] = '\0';
    #####:   68:    producer[0] = '\0';
    #####:   69:    printf("Name : ");
    %%%%%:   69-block  0
call    0 never executed
    #####:   70:    scanf("%s", name);
call    0 never executed
    #####:   71:    printf("Producer : ");
call    0 never executed
    #####:   72:    scanf("%s", producer);
call    0 never executed
    #####:   73:    Material * material = getMaterial(coffeeShop->materialList, name, producer);
call    0 never executed
    #####:   74:    if (material->quantity == -1)
branch  0 never executed
branch  1 never executed
    #####:   75:        printf("The searched material does not exist\n");
    %%%%%:   75-block  0
call    0 never executed
        -:   76:    else
    #####:   77:        printf("Searched Material: Name  %s | Producer  %s | Quantity  %d\n", material->name, material->producer,
    %%%%%:   77-block  0
call    0 never executed
        -:   78:               material->quantity);
    #####:   79:}
        -:   80:
function printListUI called 0 returned 0% blocks executed 0%
    #####:   81:void printListUI(List *list) {
        -:   82:
    #####:   83:    if (sizeOfMaterialList(list) != 0) {
    %%%%%:   83-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   84:        for (int i = 0; i < sizeOfMaterialList(list); i++) {
    %%%%%:   84-block  0
    %%%%%:   84-block  1
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   85:            Material * material = list->elements[i];
    #####:   86:            printf("Material %d: Name  %s | Producer  %s | Quantity  %d", i + 1, material->name,
    %%%%%:   86-block  0
call    0 never executed
        -:   87:                   material->producer, material->quantity);
        -:   88:        }
    #####:   89:        printf("\n");
    %%%%%:   89-block  0
call    0 never executed
        -:   90:    } else {
    #####:   91:        printf("There are no materials in the list\n");
    %%%%%:   91-block  0
call    0 never executed
        -:   92:    }
    #####:   93:}
        -:   94:
function getMaterialByNameUI called 0 returned 0% blocks executed 0%
    #####:   95:void getMaterialByNameUI(CoffeeShop* coffeeShop) {
        -:   96:    char name[30];
    #####:   97:    name[0] = '\0';
    #####:   98:    printf("Name : ");
    %%%%%:   98-block  0
call    0 never executed
    #####:   99:    scanf("%s", name);
call    0 never executed
    #####:  100:    int qt = getAllMaterialsByName(coffeeShop->materialList, name);
call    0 never executed
    #####:  101:    printf("The selected material has a quantity of %d\n", qt);
call    0 never executed
    #####:  102:}
        -:  103:
function filterByStartingLetterUI called 0 returned 0% blocks executed 0%
    #####:  104:void filterByStartingLetterUI(CoffeeShop* coffeeShop) {
        -:  105:    char letter;
    #####:  106:    printf("Letter :");
    %%%%%:  106-block  0
call    0 never executed
    #####:  107:    scanf("%c", &letter);
call    0 never executed
    #####:  108:    List *filterResult = getMaterialsWithStartingLetter(coffeeShop->materialList,letter);
call    0 never executed
    #####:  109:    printListUI(filterResult);
call    0 never executed
    #####:  110:    destroyList(filterResult);
call    0 never executed
    #####:  111:}
        -:  112:
function filterByLessQuantityUI called 0 returned 0% blocks executed 0%
    #####:  113:void filterByLessQuantityUI(CoffeeShop* coffeeShop) {
    #####:  114:    int quantity = 0;
    #####:  115:    printf("Quantity : ");
    %%%%%:  115-block  0
call    0 never executed
    #####:  116:    scanf("%d", &quantity);
call    0 never executed
    #####:  117:    List* filterResult = getMaterialsWithLessQuantity(coffeeShop->materialList, quantity);
call    0 never executed
    #####:  118:    printListUI(filterResult);
call    0 never executed
    #####:  119:    destroyList(filterResult);
call    0 never executed
    #####:  120:}
        -:  121:
function undoUI called 0 returned 0% blocks executed 0%
    #####:  122:void undoUI(CoffeeShop* coffeeShop) {
    #####:  123:    int res = undo(coffeeShop);
    %%%%%:  123-block  0
call    0 never executed
    #####:  124:    if (res == 1)
branch  0 never executed
branch  1 never executed
    #####:  125:        printf("There was an error\n");
    %%%%%:  125-block  0
call    0 never executed
        -:  126:    else
    #####:  127:        printf("Undo success\n");
    %%%%%:  127-block  0
call    0 never executed
    #####:  128:}
        -:  129:
function sortByNameUI called 0 returned 0% blocks executed 0%
    #####:  130:void sortByNameUI(CoffeeShop* coffeeShop) {
    #####:  131:    int order = 0;
    #####:  132:    printf("Order (0-descending 1-ascending) : ");
    %%%%%:  132-block  0
call    0 never executed
    #####:  133:    scanf("%d", &order);
call    0 never executed
    #####:  134:    List* filterResult = getMaterialsOrderedByName(coffeeShop->materialList, order);
call    0 never executed
    #####:  135:    printListUI(filterResult);
call    0 never executed
    #####:  136:    destroyList(filterResult);
call    0 never executed
    #####:  137:}
        -:  138:
function sortByQuantityUI called 0 returned 0% blocks executed 0%
    #####:  139:void sortByQuantityUI(CoffeeShop* coffeeShop) {
    #####:  140:    int order = 0;
    #####:  141:    printf("Order (0-descending 1-ascending) : ");
    %%%%%:  141-block  0
call    0 never executed
    #####:  142:    scanf("%d", &order);
call    0 never executed
    #####:  143:    List* filterResult = getMaterialsOrderedByQuantity(coffeeShop->materialList, order);
call    0 never executed
    #####:  144:    printListUI(filterResult);
call    0 never executed
    #####:  145:    destroyList(filterResult);
call    0 never executed
    #####:  146:}
        -:  147:
function runUI called 1 returned 100% blocks executed 34%
        1:  148:void runUI(CoffeeShop* coffeeShop) {
        1:  149:    int running = 1;
        2:  150:    while (running) {
        1:  150-block  0
        2:  150-block  1
branch  0 taken 1
branch  1 taken 1 (fallthrough)
        -:  151:
        1:  152:        printMenu();
        1:  152-block  0
call    0 returned 1
        1:  153:        int cmd = 0;
        1:  154:        printf("Introdu Comanda : ");
call    0 returned 1
        1:  155:        scanf_s("%d", &cmd);
call    0 returned 1
        1:  156:        switch (cmd) {
branch  0 taken 0
branch  1 taken 0
branch  2 taken 0
branch  3 taken 0
branch  4 taken 0
branch  5 taken 0
branch  6 taken 0
branch  7 taken 0
branch  8 taken 0
branch  9 taken 0
branch 10 taken 0
branch 11 taken 1
branch 12 taken 0
    #####:  157:            case 1: {
    #####:  158:                addMaterialUI(coffeeShop);
    %%%%%:  158-block  0
call    0 never executed
    #####:  159:                break;
        -:  160:            }
    #####:  161:            case 2: {
    #####:  162:                updateMaterialUI(coffeeShop);
    %%%%%:  162-block  0
call    0 never executed
    #####:  163:                break;
        -:  164:            }
    #####:  165:            case 3: {
    #####:  166:                removeMaterialUI(coffeeShop);
    %%%%%:  166-block  0
call    0 never executed
    #####:  167:                break;
        -:  168:            }
    #####:  169:            case 4: {
    #####:  170:                getMaterialUI(coffeeShop);
    %%%%%:  170-block  0
call    0 never executed
    #####:  171:                break;
        -:  172:            }
    #####:  173:            case 5: {
    #####:  174:                printListUI(coffeeShop->materialList);
    %%%%%:  174-block  0
call    0 never executed
    #####:  175:                break;
        -:  176:            }
    #####:  177:            case 6: {
    #####:  178:                getMaterialByNameUI(coffeeShop);
    %%%%%:  178-block  0
call    0 never executed
    #####:  179:                break;
        -:  180:            }
    #####:  181:            case 7: {
    #####:  182:                filterByStartingLetterUI(coffeeShop);
    %%%%%:  182-block  0
call    0 never executed
    #####:  183:                break;
        -:  184:            }
    #####:  185:            case 8: {
    #####:  186:                filterByLessQuantityUI(coffeeShop);
    %%%%%:  186-block  0
call    0 never executed
    #####:  187:                break;
        -:  188:            }
    #####:  189:            case 9: {
    #####:  190:                sortByNameUI(coffeeShop);
    %%%%%:  190-block  0
call    0 never executed
    #####:  191:                break;
        -:  192:            }
    #####:  193:            case 10: {
    #####:  194:                sortByQuantityUI(coffeeShop);
    %%%%%:  194-block  0
call    0 never executed
    #####:  195:                break;
        -:  196:            }
    #####:  197:            case 11: {
    #####:  198:                undoUI(coffeeShop);
    %%%%%:  198-block  0
call    0 never executed
    #####:  199:                break;
        -:  200:            }
        1:  201:            case 0: {
        1:  202:                destroyList(coffeeShop->materialList);
        1:  202-block  0
call    0 returned 1
        1:  203:                destroyList(coffeeShop->undoList);
call    0 returned 1
        1:  204:                printf("Bye !\n");
call    0 returned 1
        1:  205:                running = 0;
        -:  206:            }
        1:  207:            default: {
        1:  208:                continue;
        1:  208-block  0
        -:  209:            }
        -:  210:        }
        -:  211:    }
        1:  212:}
